#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

const char *ssid = "Redmi Note 7S";
const char *password = "hello..!";
const int buttonPin1 = 2;
const int buttonPin2 = 3;
String button1State = "NotPressed";
String button2State = "NotPressed";
String URL = "http://192.168.43.141/rfidattendance/switchget.php";
WiFiClient client;

void setup() {
  Serial.begin(115200);
  pinMode(buttonPin1, INPUT_PULLUP);
  pinMode(buttonPin2, INPUT_PULLUP);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  buttonModule();
}

void buttonModule() {
  // Check if Button 1 is pressed
  if (digitalRead(buttonPin1) == LOW) {
    button1State = "Pressed";
    button2State = "NotPressed";
    Serial.println("Button 1 pressed! Hello, world! " + button1State);
    sendButtonState();
    delay(1000); // Simple debounce delay
  }

  // Check if Button 2 is pressed
  if (digitalRead(buttonPin2) == LOW) {
    button2State = "Pressed";
    button1State = "NotPressed";
    Serial.println("Button 2 pressed! Greetings! " + button2State);
    sendButtonState();
    delay(1000); // Simple debounce delay
  }
}

void sendButtonState() {
  HTTPClient http;

  // Add parameters to the URL
  String requestURL = URL + "?button1=" + button1State + "&button2=" + button2State;
    IPAddress localIP = WiFi.localIP();
    requestURL += "&ip=" + localIP.toString();

  // Start the HTTP client
 // http.begin(client, Link);
 Serial.println(requestURL);
  http.begin(client, requestURL);

  // Send the HTTP GET request
  int httpResponseCode = http.GET();

  // Check for a successful request
  if (httpResponseCode > 0) {
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
  } else {
    Serial.print("HTTP Request failed. Error code: ");
    Serial.println(httpResponseCode);
  }
  String payload = http.getString();
  Serial.println(payload);

  // Close the connection
  http.end();
}
